(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function r(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerPolicy&&(a.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?a.credentials="include":t.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(t){if(t.ep)return;t.ep=!0;const a=r(t);fetch(t.href,a)}})();const h="/wdd330-final-project/",i=(o="Something went wrong")=>{const e=document.createElement("div");e.classList.add("toast","error"),e.textContent=o,document.body.prepend(e),setTimeout(()=>{e.classList.add("show")},10),setTimeout(()=>{e.classList.remove("show"),e.classList.add("hide")},3e3),setTimeout(()=>{e.remove()},3500)},y=(o="Operation successful")=>{const e=document.createElement("div");e.classList.add("toast","success"),e.textContent=o,document.body.prepend(e),setTimeout(()=>{e.classList.add("show")},10),setTimeout(()=>{e.classList.remove("show"),e.classList.add("hide")},3e3),setTimeout(()=>{e.remove()},3500)},w=async(o,e,r,s)=>{const t=document.querySelector(e),a=document.querySelector(s);if(!o||o.length===0){a.innerHTML="<p>No movies found.</p>";return}o.forEach(n=>{const c=t.content.cloneNode(!0),d=c.querySelector("h1"),l=c.querySelector("#container"),u=c.querySelector("p"),p=n.genre_ids.map(f=>r[f]),g=n.release_date?new Date(n.release_date).getFullYear():"N/A";u.textContent=`${g} | ${p.join(", ")}`,l.href=`${h}movie/?id=${n.id}`,l.style.backgroundImage=`url(https://image.tmdb.org/t/p/w500${n.poster_path})`,d.textContent=n.title,a.appendChild(c)})},v=async(o,e)=>{const r=document.querySelector(e),s=document.getElementById("movies-container");if(!o||o.length===0){s.innerHTML="<p>No movies found.</p>";return}o.forEach(t=>{const a=r.content.cloneNode(!0),n=a.querySelector("h1"),c=a.querySelector("#container"),d=a.querySelector("p"),l=t.release_date?new Date(t.release_date).getFullYear():"N/A";d.textContent=`${l} | ${t.genres.map(u=>u.name).join(", ")}`,c.href=`${h}movie/?id=${t.id}`,c.style.backgroundImage=`url(https://image.tmdb.org/t/p/w500${t.poster_path})`,n.textContent=t.title,s.appendChild(a)})},$=o=>new URLSearchParams(window.location.search).get(o),S=o=>{const e=Math.floor(o/60),r=o%60;return`${e}h ${r}m`},b=(o,e)=>{localStorage.setItem(o,JSON.stringify(e))},L=o=>{const e=localStorage.getItem(o);return e?JSON.parse(e):null},E=(o,e=300)=>{let r;return(...s)=>{clearTimeout(r),r=setTimeout(()=>{o.apply(void 0,s)},e)}},m=async(o,e)=>{const r=document.getElementById(o);if(r)try{const t=await(await fetch(`${h}partials/${e}`)).text();r.innerHTML=t}catch(s){console.error(`Error loading partial ${e}:`,s)}},F=async()=>{await m("header","header.html"),await m("footer","footer.html")};class T{constructor(e){this.apiKey=e,this.baseUrl="https://api.themoviedb.org/3",this.imageBaseUrl="https://image.tmdb.org/t/p/w500"}async getTrendingMovies(){try{const e=`${this.baseUrl}/trending/movie/week?api_key=${this.apiKey}`,r=await fetch(e);return r.ok?(await r.json()).results:(i("Failed to fetch trending movies."),[])}catch(e){return console.error("Error fetching trending movies:",e),i("Failed to load trending movies."),[]}}async getGenres(){try{const e=await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this.apiKey}&language=en-US`);return e.ok?(await e.json()).genres:(i("Failed to fetch genres."),[])}catch(e){return console.error("Error fetching genres:",e),i("Failed to load genres."),[]}}async getMovieDetails(e){try{const r=`${this.baseUrl}/movie/${e}?api_key=${this.apiKey}&language=en-US`,s=await fetch(r);return s.ok?await s.json():(i("Failed to fetch movie details."),null)}catch(r){return console.error("Error fetching movie details:",r),i("Failed to load movie details."),null}}async getMoviesById(e){try{const r=e.map(t=>fetch(`${this.baseUrl}/movie/${t}?api_key=${this.apiKey}&language=en-US`).then(a=>a.json()));return(await Promise.all(r)).filter(t=>t&&t.id)}catch(r){return console.error("Error fetching movies:",r),i("Failed to load movies."),[]}}async searchMovies(e){try{const r=`${this.baseUrl}/search/movie?api_key=${this.apiKey}&language=en-US&query=${encodeURIComponent(e)}&page=1`,s=await fetch(r);return s.ok?(await s.json()).results:(i("Failed to search movies."),[])}catch(r){return console.error("Error searching movies:",r),i("Failed to search movies."),[]}}async getSimilarMovies(e){try{const r=`${this.baseUrl}/movie/${e}/similar?api_key=${this.apiKey}&language=en-US&page=1`,s=await fetch(r);return s.ok?(await s.json()).results:(i("Failed to fetch similar movies."),[])}catch(r){return console.error("Error fetching similar movies:",r),i("Failed to load similar movies."),[]}}}export{T,v as a,h as b,i as c,w as d,$ as e,y as f,L as g,S as h,E as i,F as l,b as s};
