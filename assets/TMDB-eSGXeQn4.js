(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function s(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(t){if(t.ep)return;t.ep=!0;const r=s(t);fetch(t.href,r)}})();const g="/wdd330-final-project/",c=(o="Something went wrong")=>{const e=document.createElement("div");e.classList.add("toast","error"),e.textContent=o,document.body.prepend(e),setTimeout(()=>{e.classList.add("show")},10),setTimeout(()=>{e.classList.remove("show"),e.classList.add("hide")},3e3),setTimeout(()=>{e.remove()},3500)},f=(o="Operation successful")=>{const e=document.createElement("div");e.classList.add("toast","success"),e.textContent=o,document.body.prepend(e),setTimeout(()=>{e.classList.add("show")},10),setTimeout(()=>{e.classList.remove("show"),e.classList.add("hide")},3e3),setTimeout(()=>{e.remove()},3500)},y=async(o,e,s)=>{const n=document.querySelector(e),t=document.getElementById("movies-container");if(!o||o.length===0){t.innerHTML="<p>No movies found.</p>";return}o.forEach(r=>{const a=n.content.cloneNode(!0),i=a.querySelector("h1"),l=a.querySelector("#container"),d=a.querySelector("p"),u=r.genre_ids.map(p=>s[p]),h=r.release_date?new Date(r.release_date).getFullYear():"N/A";d.textContent=`${h} | ${u.join(", ")}`,l.href=`movie/?id=${r.id}`,l.style.backgroundImage=`url(https://image.tmdb.org/t/p/w500${r.poster_path})`,i.textContent=r.title,t.appendChild(a)})},w=async(o,e)=>{const s=document.querySelector(e),n=document.getElementById("movies-container");if(!o||o.length===0){n.innerHTML="<p>No movies found.</p>";return}o.forEach(t=>{const r=s.content.cloneNode(!0),a=r.querySelector("h1"),i=r.querySelector("#container"),l=r.querySelector("p"),d=t.release_date?new Date(t.release_date).getFullYear():"N/A";l.textContent=`${d} | ${t.genres.map(u=>u.name).join(", ")}`,i.href=`movie/?id=${t.id}`,i.style.backgroundImage=`url(https://image.tmdb.org/t/p/w500${t.poster_path})`,a.textContent=t.title,n.appendChild(r)})},v=o=>new URLSearchParams(window.location.search).get(o),$=o=>{const e=Math.floor(o/60),s=o%60;return`${e}h ${s}m`},S=(o,e)=>{localStorage.setItem(o,JSON.stringify(e))},L=o=>{const e=localStorage.getItem(o);return e?JSON.parse(e):null},m=async(o,e)=>{const s=document.getElementById(o);if(s)try{const t=await(await fetch(`${g}partials/${e}`)).text();s.innerHTML=t}catch(n){console.error(`Error loading partial ${e}:`,n)}},b=async()=>{await m("header","header.html"),await m("footer","footer.html")};class E{constructor(e){this.apiKey=e,this.baseUrl="https://api.themoviedb.org/3",this.imageBaseUrl="https://image.tmdb.org/t/p/w500"}async getTrendingMovies(){try{const e=`${this.baseUrl}/trending/movie/week?api_key=${this.apiKey}`,s=await fetch(e);return s.ok?(await s.json()).results:(c("Failed to fetch trending movies."),[])}catch(e){return console.error("Error fetching trending movies:",e),c("Failed to load trending movies."),[]}}async getGenres(){try{const e=await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this.apiKey}&language=en-US`);return e.ok?(await e.json()).genres:(c("Failed to fetch genres."),[])}catch(e){return console.error("Error fetching genres:",e),c("Failed to load genres."),[]}}async getMovieDetails(e){try{const s=`${this.baseUrl}/movie/${e}?api_key=${this.apiKey}&language=en-US`,n=await fetch(s);return n.ok?await n.json():(c("Failed to fetch movie details."),null)}catch(s){return console.error("Error fetching movie details:",s),c("Failed to load movie details."),null}}async getMoviesById(e){try{const s=e.map(t=>fetch(`${this.baseUrl}/movie/${t}?api_key=${this.apiKey}&language=en-US`).then(r=>r.json()));return(await Promise.all(s)).filter(t=>t&&t.id)}catch(s){return console.error("Error fetching movies:",s),c("Failed to load movies."),[]}}}export{E as T,w as a,c as b,v as c,y as d,f as e,$ as f,L as g,g as i,b as l,S as s};
